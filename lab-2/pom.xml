<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>lab2</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>lab2</name>
    <packaging>war</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>
        <junit.version>5.8.2</junit.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>5.0.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.3.2</version>
            </plugin>
            <plugin>
                <groupId>com.gitlab.haynes</groupId>
                <artifactId>libsass-maven-plugin</artifactId>
                <version>0.2.28</version>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <inputPath>${basedir}/src/main/webapp/styles/</inputPath>
                    <outputPath>${basedir}/src/main/webapp/css/</outputPath>
                </configuration>
            </plugin>

<!--            <plugin>-->
<!--                <groupId>org.codehaus.mojo</groupId>-->
<!--                <artifactId>exec-maven-plugin</artifactId>-->
<!--                <version>1.3.2</version>-->
<!--                <executions>-->
<!--                    &lt;!&ndash; Required: The following will ensure `npm install` is called-->
<!--                         before anything else during the 'Default Lifecycle' &ndash;&gt;-->
<!--                    <execution>-->
<!--                        <id>npm install (initialize)</id>-->
<!--                        <goals>-->
<!--                            <goal>exec</goal>-->
<!--                        </goals>-->
<!--                        <phase>initialize</phase>-->
<!--                        <configuration>-->
<!--                            <executable>npm</executable>-->
<!--                            <arguments>-->
<!--                                <argument>install</argument>-->
<!--                            </arguments>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                    &lt;!&ndash; Required: The following will ensure `npm install` is called-->
<!--                         before anything else during the 'Clean Lifecycle' &ndash;&gt;-->
<!--                    <execution>-->
<!--                        <id>npm install (clean)</id>-->
<!--                        <goals>-->
<!--                            <goal>exec</goal>-->
<!--                        </goals>-->
<!--                        <phase>pre-clean</phase>-->
<!--                        <configuration>-->
<!--                            <executable>npm</executable>-->
<!--                            <arguments>-->
<!--                                <argument>install</argument>-->
<!--                            </arguments>-->
<!--                        </configuration>-->
<!--                    </execution>-->

<!--                    &lt;!&ndash; Required: This following calls `npm run build` where 'build' is-->
<!--                         the script name I used in my project, change this if yours is-->
<!--                             different &ndash;&gt;-->
<!--                    <execution>-->
<!--                        <id>npm run build (compile)</id>-->
<!--                        <goals>-->
<!--                            <goal>exec</goal>-->
<!--                        </goals>-->
<!--                        <phase>compile</phase>-->
<!--                        <configuration>-->
<!--                            <executable>npm</executable>-->
<!--                            <arguments>-->
<!--                                <argument>run</argument>-->
<!--                                <argument>build</argument>-->
<!--                            </arguments>-->
<!--                        </configuration>-->
<!--                    </execution>-->

<!--                </executions>-->

<!--                <configuration>-->
<!--                    <environmentVariables>-->
<!--                        <CI>true</CI>-->
<!--                        &lt;!&ndash; The following parameters create an NPM sandbox for CI &ndash;&gt;-->
<!--                        <NPM_CONFIG_PREFIX>${basedir}/npm</NPM_CONFIG_PREFIX>-->
<!--                        <NPM_CONFIG_CACHE>${NPM_CONFIG_PREFIX}/cache</NPM_CONFIG_CACHE>-->
<!--                        <NPM_CONFIG_TMP>${project.build.directory}/npmtmp</NPM_CONFIG_TMP>-->
<!--                    </environmentVariables>-->
<!--                </configuration>-->
<!--            </plugin>-->
        </plugins>
    </build>
</project>